theme_bw() +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 16, face = "bold"),
axis.title.x = element_text(vjust = -0.5)) +
theme(legend.position = "top", legend.direction = "horizontal",
legend.text = element_text(size = 12, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
mycolors <- c("darkorchid4", "darkgreen", "darkblue", "dodgerblue", "cyan3", "brown2")
pca.dt$PC2R <- -pca.dt$PC2
pca.dt$PC3R <- -pca.dt$PC3
name1 <- rownames(pca.dt)
name2 <- rownames(pca.dt)
name1[c(1:3, 5, 6, 9, 12)] <- ""
name2[-c(5, 6, 9, 12)] <- ""
pdf("~/Dropbox/Lupus/Figures/immgenPCA.pdf", fonts = "Helvetica")
ggplot(pca.dt, aes(x = PC3R, y = PC2R)) +
# geom_point(aes(color = type, shape = as.factor(lab)), size = 5) +
geom_point(aes(color = type, shape = as.factor(lab), size = lab), scale_size = 10) +
xlim(-26, 26) + ylim(-26, 26) +
scale_size_continuous(range = c(5,10), guide = FALSE) +
scale_shape_discrete(guide = FALSE) +
scale_colour_manual(values = mycolors) +
guides(colour = guide_legend(override.aes = list(size = 5))) +
geom_text(aes(label = name1, color = type), size = 4, face = "bold", vjust = -1.0) +
geom_text(aes(label = name2, color = type), size = 4, face = "bold", vjust = 2.0) +
theme_bw() +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 16, face = "bold"),
axis.title.x = element_text(vjust = -0.5)) +
theme(legend.position = "top", legend.direction = "horizontal",
legend.text = element_text(size = 12, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
mycolors <- c("darkorchid4", "darkgreen", "darkblue", "dodgerblue", "springgreen2", "brown2")
pca.dt$PC2R <- -pca.dt$PC2
pca.dt$PC3R <- -pca.dt$PC3
name1 <- rownames(pca.dt)
name2 <- rownames(pca.dt)
name1[c(1:3, 5, 6, 9, 12)] <- ""
name2[-c(5, 6, 9, 12)] <- ""
pdf("~/Dropbox/Lupus/Figures/immgenPCA.pdf", fonts = "Helvetica")
ggplot(pca.dt, aes(x = PC3R, y = PC2R)) +
# geom_point(aes(color = type, shape = as.factor(lab)), size = 5) +
geom_point(aes(color = type, shape = as.factor(lab), size = lab), scale_size = 10) +
xlim(-26, 26) + ylim(-26, 26) +
scale_size_continuous(range = c(5,10), guide = FALSE) +
scale_shape_discrete(guide = FALSE) +
scale_colour_manual(values = mycolors) +
guides(colour = guide_legend(override.aes = list(size = 5))) +
geom_text(aes(label = name1, color = type), size = 4, face = "bold", vjust = -1.0) +
geom_text(aes(label = name2, color = type), size = 4, face = "bold", vjust = 2.0) +
theme_bw() +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 16, face = "bold"),
axis.title.x = element_text(vjust = -0.5)) +
theme(legend.position = "top", legend.direction = "horizontal",
legend.text = element_text(size = 12, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
mycolors <- c("darkorchid4", "darkgreen", "darkblue", "dodgerblue", "tan4", "brown2")
pca.dt$PC2R <- -pca.dt$PC2
pca.dt$PC3R <- -pca.dt$PC3
name1 <- rownames(pca.dt)
name2 <- rownames(pca.dt)
name1[c(1:3, 5, 6, 9, 12)] <- ""
name2[-c(5, 6, 9, 12)] <- ""
pdf("~/Dropbox/Lupus/Figures/immgenPCA.pdf", fonts = "Helvetica")
ggplot(pca.dt, aes(x = PC3R, y = PC2R)) +
# geom_point(aes(color = type, shape = as.factor(lab)), size = 5) +
geom_point(aes(color = type, shape = as.factor(lab), size = lab), scale_size = 10) +
xlim(-26, 26) + ylim(-26, 26) +
scale_size_continuous(range = c(5,10), guide = FALSE) +
scale_shape_discrete(guide = FALSE) +
scale_colour_manual(values = mycolors) +
guides(colour = guide_legend(override.aes = list(size = 5))) +
geom_text(aes(label = name1, color = type), size = 4, face = "bold", vjust = -1.0) +
geom_text(aes(label = name2, color = type), size = 4, face = "bold", vjust = 2.0) +
theme_bw() +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 16, face = "bold"),
axis.title.x = element_text(vjust = -0.5)) +
theme(legend.position = "top", legend.direction = "horizontal",
legend.text = element_text(size = 12, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
roopenian.tpm <- read.delim("~/Dropbox/Lupus/RnaSeq/roopenian.genes.TPM", sep = " ", header = F, stringsAsFactors = F)
roopenian.tpm <- aggregate(. ~ V1, data = roopenian.tpm, sum)  # aggregate multiple records
roopenian.tpm <- data.frame(row.names = roopenian.tpm$V1, roopenian.tpm[, 2:ncol(roopenian.tpm)])
colnames(roopenian.tpm) <- c("VNIN.Rep1", "VNIN.Rep2", "VNIP.Rep1", "VNIP.Rep2", "VPIP.Rep1", "VPIP.Rep2")
head(roopenian.tpm)
roopenian.tpm.mean <- data.frame(row.names = rownames(roopenian.tpm),
rowMeans(roopenian.tpm[1:2]), rowMeans(roopenian.tpm[3:4]), rowMeans(roopenian.tpm[5:6]))
colnames(roopenian.tpm.mean) <- unique(gsub("\\.Rep[12]", "", colnames(roopenian.tpm)))
load("~/Dropbox/Lupus/R/ebSeqSigGene.rdt")
roopenian <- roop.tpm.me[sig1.gene, ]
roopenian <- roopean.tpm.mean[sig1.gene, ]
roopenian <- roopeanian.tpm.mean[sig1.gene, ]
roopenian <- roopenian.tpm.mean[sig1.gene, ]
roopenian.tpm <- read.delim("~/Dropbox/Lupus/RnaSeq/roopenian.genes.TPM", sep = " ", header = F, stringsAsFactors = F)
roopenian.tpm <- aggregate(. ~ V1, data = roopenian.tpm, sum)  # aggregate multiple records
roopenian.tpm <- data.frame(row.names = roopenian.tpm$V1, roopenian.tpm[, 2:ncol(roopenian.tpm)])
colnames(roopenian.tpm) <- c("VNIN.Rep1", "VNIN.Rep2", "VNIP.Rep1", "VNIP.Rep2", "VPIP.Rep1", "VPIP.Rep2")
roopenian.tpm.mean <- data.frame(row.names = rownames(roopenian.tpm),
rowMeans(roopenian.tpm[1:2]), rowMeans(roopenian.tpm[3:4]), rowMeans(roopenian.tpm[5:6]))
colnames(roopenian.tpm.mean) <- unique(gsub("\\.Rep[12]", "", colnames(roopenian.tpm)))
load("~/Dropbox/Lupus/R/ebSeqSigGene.rdt")
roopenian <- roopenian.tpm.mean[sig1.gene, ]
str(roopenian)
liu <- read.delim("~/Dropbox/Lupus/Liu2012/liu.txt", row.names = 1, sep = "\t", header = T)
head(liu)
id2gene.map <- read.delim("~/Dropbox/Lupus/Liu2012/mart_export.txt", sep = "\t", header = T)
head(id2gene.map)
str(id2gene.map)
liu <- read.delim("~/Dropbox/Lupus/Liu2012/liu.txt", row.names = 1, sep = "\t", header = T, stringsAsFactors = F)
liu <- read.delim("~/Dropbox/Lupus/Liu2012/liu.txt", row.names = 1, sep = "\t", header = T)
id2gene.map <- read.delim("~/Dropbox/Lupus/Liu2012/mart_export.txt", sep = "\t", header = T, stringsAsFactors = F)
liu <- merge(id2gene.map, liu, by.x = "Affy.MoGene.probeset", by.y = "row.names", all.y = TRUE)
head(liu)
roopenian.tpm <- read.delim("~/Dropbox/Lupus/RnaSeq/roopenian.genes.TPM", sep = " ", header = F, stringsAsFactors = F)
roopenian.tpm <- aggregate(. ~ V1, data = roopenian.tpm, sum)  # aggregate multiple records
roopenian.tpm <- data.frame(row.names = roopenian.tpm$V1, roopenian.tpm[, 2:ncol(roopenian.tpm)])
colnames(roopenian.tpm) <- c("VNIN.Rep1", "VNIN.Rep2", "VNIP.Rep1", "VNIP.Rep2", "VPIP.Rep1", "VPIP.Rep2")
roopenian.tpm.mean <- data.frame(row.names = rownames(roopenian.tpm),
rowMeans(roopenian.tpm[1:2]), rowMeans(roopenian.tpm[3:4]), rowMeans(roopenian.tpm[5:6]))
colnames(roopenian.tpm.mean) <- unique(gsub("\\.Rep[12]", "", colnames(roopenian.tpm)))
load("~/Dropbox/Lupus/R/ebSeqSigGene.rdt")
roopenian <- roopenian.tpm.mean[sig1.gene, ]
load("~/Dropbox/Lupus/R/liu.rdt")
head(liu)
summary(liu[, 1])
summary(roopenian[, 1])
roopenian <- log2(roopenian + 1)  # log2
roopenian <- roopenian[apply(roopenian, 1, max) > 5, ]  # expression level
liu <- liu[rownames(roopenian), ]
idx <- intersect(rownames(roopenian), rownames(liu))  # common ids
data1 <- cbind(roopenian[idx, ], liu[idx, ])
data1 <- as.data.frame(apply(data1, 2, scale))  # Z norm per sample
head(data1)
rownames(data1) <- idx
heatmap(cor(data1))
cor(data1)
data1 <- cbind(roopenian[idx, ], liu[idx, ])
cor(data1)
cor(data1, method = "spearman")
data1 <- as.data.frame(apply(data1, 2, scale))  # Z norm per sample
cor(data1, method = "spearman")
cor(data1)
data1 <- cbind(roopenian[idx, ], liu[idx, ])
head(data1)
data1 <- cbind(roopenian[idx, ], liu[idx, ])
rownames(data1) <- idx
heatmap(cor(data1[, -c(1:2)]))
hc1 <- hcluster(t(data1), method = "pearson", link = "average")  # clust samples
library(amap)
library(ape)
library(ggplot2)
hc1 <- hcluster(t(data1), method = "pearson", link = "average")  # clust samples
plot(as.phylo(hc1), type = "unrooted", lab4ut = "axial")
hc1 <- hcluster(t(data1[, -c(1:2)]), method = "pearson", link = "average")  # clust samples
plot(as.phylo(hc1), type = "unrooted", lab4ut = "axial")
plot(as.phylo(hc1))
head(data1)
summary(data1[, 1])
data1.ctr <- data1 - apply(data1, 1, mean)
data1.svd <- svd(data1.center)  # SVD
data1.svd <- svd(data1.ctr)  # SVD
str(data1.ctr)
str(data1.svd)
plot(data1.svd$v)
data1.svd$v
plot(data1.svd$v[, 1])
plot(data1.svd$v[, 2])
barplot(data1.svd$v[, 1])
head(data.ctr)
head(data1.ctr)
barplot(data1.svd$v[1, ])
barplot(data1.svd$v[, 2])
barplot(data1.svd$v[, 3])
barplot(data1.svd$v[, 2])
sample <- as.factor(c("R", "R", "R", "L", "L", "L"))
data2 <- t(apply(data1.ctr, 1, function (x) {lm(x ~ sample - 1)$res}))  # regress on year
head(data21)
head(data2)
hc1 <- hcluster(t(data2), method = "pearson", link = "average")  # clust samples
plot(as.phylo(hc1))
data2 <- t(apply(data1.ctr, 1, function (x) {lm(x ~ data1.svd$v[, 1])$res}))  # regress on year
hc1 <- hcluster(t(data2), method = "pearson", link = "average")  # clust samples
plot(as.phylo(hc1))
hc1 <- hcluster(t(data2), method = "pearson", link = "average")  # clust samples
plot(as.phylo(hc1))
plot(as.phylo(hc1), type = "unrooted", lab4ut = "axial")
cor(data2)
heatmap(cor(data2))
head(data2)
plot(as.phylo(hc1), edge.width = 2)
plot(as.phylo(hc1), edge.width = 2, edge.color = c("darkgreen", "darkblue", "darkred"))
plot(as.phylo(hc1), edge.width = 2)
str(hc1)
hc1$labels
cat("as", "toupper(as)")
cat("as", toupper(as))
?topper
?toupper
cat("as", toupper("as"))
expression(R^2 == 4)
cat(expression(R^2 == 4))
expression(R^{2} == 4)
expression(paste(delta^{13}, "C (\u2030)")))
expression(paste(delta^{13}, "C (\u2030)"))
?expression
expression(delta^{13})
expression(r^{13})
expression(" "^14*C*"-glyphosate line1")
hc1$labels
hc1$labels <- c("VFP(N)/ICOS(N)", "VFP(N)/ICOS(P)", "VFP(P)/ICOS(P)", "CXCR5(P)/BCL6(P)", "CXCR5(N)/BCL6(N)", "CXCR5(P)/BCL6(N)")
plot(as.phylo(hc1), edge.width = 2)
plot(as.phylo(hc1), edge.width = 2, font = 2)
pdf("~/Dropbox/Lupus/Figures/liuPhylo.pdf", fonts = "Helvetica")
plot(as.phylo(hc1), edge.width = 2, font = 2)
dev.off()
pdf("~/Dropbox/Lupus/Figures/liuPhylo.pdf", fonts = "Helvetica")
plot(as.phylo(hc1), edge.width = 2, font = 2, label.offset = 2)
dev.off()
pdf("~/Dropbox/Lupus/Figures/liuPhylo.pdf", fonts = "Helvetica")
plot(as.phylo(hc1), edge.width = 2, font = 2, label.offset = 1)
dev.off()
pdf("~/Dropbox/Lupus/Figures/liuPhylo.pdf", fonts = "Helvetica")
plot(as.phylo(hc1), edge.width = 2, font = 2, label.offset = .1)
dev.off()
pdf("~/Dropbox/Lupus/Figures/liuPhylo.pdf", fonts = "Helvetica")
plot(as.phylo(hc1), edge.width = 2, font = 2, label.offset = ..5)
dev.off()
pdf("~/Dropbox/Lupus/Figures/liuPhylo.pdf", fonts = "Helvetica")
plot(as.phylo(hc1), edge.width = 2, font = 2, label.offset = .05)
dev.off()
pdf("~/Dropbox/Lupus/Figures/liuPhylo.pdf", fonts = "Helvetica")
plot(as.phylo(hc1), edge.width = 2, font = 2, label.offset = .03)
dev.off()
ens.tx2type <- read.delim("~/Dropbox/Lupus/TCR/ens.tx2type.txt", stringsAsFactors = F)
tr.v <- ens.tx2type[grep("Tr[ab]v", ens.tx2type$Associated.Gene.Name), ]
tr.j <- ens.tx2type[grep("Tr[ab]j", ens.tx2type$Associated.Gene.Name), ]
tr.d <- ens.tx2type[grep("Trbd", ens.tx2type$Associated.Gene.Name), ]
roopenian.tpm <- read.delim("~/Dropbox/Lupus/RnaSeq/roopenian.genes.TPM", sep = " ", header = F, stringsAsFactors = F)
roopenian.tpm <- aggregate(. ~ V1, data = roopenian.tpm, sum)  # aggregate multiple records
roopenian.tpm <- data.frame(row.names = roopenian.tpm$V1, roopenian.tpm[, 2:ncol(roopenian.tpm)])
colnames(roopenian.tpm) <- c("VNIN.Rep1", "VNIN.Rep2", "VNIP.Rep1", "VNIP.Rep2", "VPIP.Rep1", "VPIP.Rep2")
roopenian <- data.frame(row.names = rownames(roopenian.tpm),
rowMeans(roopenian.tpm[1:2]), rowMeans(roopenian.tpm[3:4]), rowMeans(roopenian.tpm[5:6]))
colnames(roopenian) <- unique(gsub("\\.Rep[12]", "", colnames(roopenian.tpm)))
ens.tx2type <- read.delim("~/Dropbox/Lupus/TCR/ens.tx2type.txt", stringsAsFactors = F)
tr.v <- ens.tx2type[grep("Tr[ab]v", ens.tx2type$Associated.Gene.Name), ]
tr.j <- ens.tx2type[grep("Tr[ab]j", ens.tx2type$Associated.Gene.Name), ]
tr.d <- ens.tx2type[grep("Trbd", ens.tx2type$Associated.Gene.Name), ]
tx.tr.v <- roopenian[unique(tr.v$Associated.Gene.Name), ]
tx.tr.j <- roopenian[unique(tr.j$Associated.Gene.Name), ]
tx.tr.d <- roopenian[unique(tr.d$Associated.Gene.Name), ]
tx.tr.v1 <- tx.tr.v[apply(tx.tr.v, 1, max) > 5, ]
tx.tr.v2 <- tx.tr.v1[apply(tx.tr.v1, 1, sd) > 5, ]
head(tx.tr.v2)
plot1.dt <- data.frame(value = c(as.matrix(tx.tr.v2)),
sample = rep(c("-/-", "-/+", "+/+"), each = nrow(tx.tr.v2)),
gene = rep(rownames(tx.tr.v2), ncol(tx.tr.v2)))
ggplot(plot1.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
xlab("TCR_V_genes") + ylab("TPM") +
scale_colour_brewer(palette="Set1") +
theme(panel.border = element_rect(size = 2, color = "black")) +
theme(axis.text = element_text(size = 8, angle = -90, face = "bold"),
axis.title = element_text(size = 16, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 12, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
tx.tr.v2 <- log2(tx.tr.v2 + 1)
tcr.dt <- data.frame(value = c(as.matrix(tx.tr.v2)),
sample = rep(c("-/-", "-/+", "+/+"), each = nrow(tx.tr.v2)),
gene = rep(rownames(tx.tr.v2), ncol(tx.tr.v2)))
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
# scale_colour_brewer(palette="Set1") +
theme(panel.border = element_rect(size = 2, color = "black")) +
theme(axis.text = element_text(size = 8, angle = -90, face = "bold"),
axis.title = element_text(size = 16, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 12, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
pdf(file = "~/Dropbox/Lupus/Figures/TCR1.pdf", width = 10, height = 5)
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
# scale_colour_brewer(palette="Set1") +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 10, angle = -90, face = "bold"),
axis.title = element_text(size = 12, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 12, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf(file = "~/Dropbox/Lupus/Figures/TCR1.pdf", width = 10, height = 5)
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
# scale_colour_brewer(palette="Set1") +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 9, angle = -90, face = "bold"),
axis.title = element_text(size = 11, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 11, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
# scale_colour_brewer(palette="Set1") +
theme(axis.title.y=element_text(vjust=0.1)) +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 9, angle = -90, face = "bold"),
axis.title = element_text(size = 11, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 11, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
# scale_colour_brewer(palette="Set1") +
theme(axis.title.y=element_text(hjust=0.1)) +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 9, angle = -90, face = "bold"),
axis.title = element_text(size = 11, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 11, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
pdf(file = "~/Dropbox/Lupus/Figures/TCR1.pdf", width = 10, height = 5)
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
# scale_colour_brewer(palette="Set1") +
theme(axis.title.y=element_text(yjust=0.2)) +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 9, angle = -90, face = "bold"),
axis.title = element_text(size = 11, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 11, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf(file = "~/Dropbox/Lupus/Figures/TCR1.pdf", width = 10, height = 5)
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
# scale_colour_brewer(palette="Set1") +
theme(axis.title.y=element_text(vjust=0.2)) +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 9, angle = -90, face = "bold"),
axis.title = element_text(size = 11, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 11, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf(file = "~/Dropbox/Lupus/Figures/TCR1.pdf", width = 10, height = 5)
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
# scale_colour_brewer(palette="Set1") +
theme(axis.title.y=element_text(vjust=0.5)) +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 9, angle = -90, face = "bold"),
axis.title = element_text(size = 11, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 11, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf(file = "~/Dropbox/Lupus/Figures/TCR1.pdf", width = 10, height = 5)
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
# scale_colour_brewer(palette="Set1") +
theme(axis.title.y=element_text(hjust=0.5)) +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 9, angle = -90, face = "bold"),
axis.title = element_text(size = 11, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 11, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf(file = "~/Dropbox/Lupus/Figures/TCR1.pdf", width = 10, height = 5)
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
# scale_colour_brewer(palette="Set1") +
# theme(axis.title.y=element_text(hjust=0.5)) +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 9, angle = -90, face = "bold", vjust = 1),
axis.title = element_text(size = 11, face = "bold")) +
theme(legend.position = "none", legend.direction = "horizontal",
legend.text = element_text(size = 11, face = "bold"),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf(file = "~/Dropbox/Lupus/Figures/TCR1.pdf", width = 10, height = 5)
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 9, angle = -90, face = "bold"),
axis.title = element_text(size = 11, face = "bold")) +
theme(legend.position = "none")
dev.off()
tx.tr.v1 <- tx.tr.v[apply(tx.tr.v, 1, max) > 5, ]
tx.tr.v2 <- tx.tr.v1[apply(tx.tr.v1, 1, sd) > 5, ]
tcr.dt <- data.frame(value = c(as.matrix(tx.tr.v2)),
sample = rep(c("-/-", "-/+", "+/+"), each = nrow(tx.tr.v2)),
gene = rep(rownames(tx.tr.v2), ncol(tx.tr.v2)))
pdf(file = "~/Dropbox/Lupus/Figures/TCR1.pdf", width = 10, height = 5)
ggplot(tcr.dt, aes(x = gene, y = value, fill = gene)) +
geom_bar(stat = "identity") + facet_grid(sample ~ .) +
theme_bw() +
# xlab("TCR_V_genes") + ylab("TPM") +
# xlab("") + ylab("TPM") +
xlab("") + ylab("Log2(TPM)") +
theme(panel.border = element_rect(size = 1, color = "black")) +
theme(axis.text = element_text(size = 9, angle = -90, face = "bold"),
axis.title = element_text(size = 11, face = "bold")) +
theme(legend.position = "none")
dev.off()
aov.dt <- roopenian.tpm[rownames(tx.tr.v2), ]
treat <- c("NN", "NN", "NP", "NP", "PP", "PP")
pheatmap(cor(tx.tr.v2, method = "pearson"), display_number = T, treeheight_row = 0)
library(pheatmap)
pdf("~/Dropbox/Lupus/TCR/pheatmap.pdf", width = 3, height = 3)
pheatmap(cor(tx.tr.v2, method = "pearson"), display_number = T, treeheight_row = 0)
dev.off()
colnames(tx.tr.v2) <- c("-/-", "-/+", "+/+")
heatmap(cor(tx.tr.v2, method = "pearson"))
cor(tx.tr.v2)
rm(list = ls())
load("~/Dropbox/Network/R1/encodex.rdt")
load("~/Dropbox/Network/R1/rnaSeq.rdt")
setwd("~/Dropbox/Network/ChipSeq/mm10")
refgene.ex.bi = refgene.bi[, "ex"]
refgene.tss1k.bi = refgene.bi[, "tss1k"]
cap.ex <- c(0, abs(diff(refgene.ex.bi))) | c(abs(diff(refgene.ex.bi)), 0) | refgene.ex.bi
refgene.en.bi <- as.numeric(refgene.en.bi - refgene.tss1k.bi == 1)  # 1k away from TSS
refgene.en.bi = refgene.bi[, "en"]
refgene.en.bi <- as.numeric(refgene.en.bi - refgene.tss1k.bi == 1)  # 1k away from TSS
refgene.en.bi <- as.numeric(refgene.en.bi - as.numeric(cap.ex) == 1)  # 200bp away from exon
x = refgene.bi[, "en"]
sum(x)
sum(refgene.en.bi)
sum(refgene.ex.bi)
refgene.bi[, "en"] = refgene.en.bi
rm(rna.df)
rm(cap.ex)
rm(x)
rm(refgene.en.bi, refgene.ex.bi, refgene.tss1k.bi)
save.image("~/Dropbox/Network/R1/encodex.rdt")
setwd("~/Dropbox/Network/ChipSeq/mm10")
h3k4me1 <- Colname(read.delim("HistoneEsb4H3k4me1ME0.bed", header = F, stringsAsFactors = F))
head(h3k4me1)
Signal()
Signal
setwd("~/Dropbox/Network/ChipSeq/mm10")
h3k4me1 <- Colname(read.delim("HistoneMelH3k04me1MImmortal.bed", header = F, stringsAsFactors = F))
h3k4me3 <- Colname(read.delim("HistoneMelH3k04me3MImmortal.bed", header = F, stringsAsFactors = F))
h3k9ac <- Colname(read.delim("HistoneMelH3k09acMImmortal.bed", header = F, stringsAsFactors = F))
# h3k9me3 <- Colname(read.delim("", header = F, stringsAsFactors = F))
h3k27ac <- Colname(read.delim("HistoneMelH3k27acMImmortal.bed", header = F, stringsAsFactors = F))
h3k27me3 <- Colname(read.delim("HistoneMelH3k27me3MImmortal.bed", header = F, stringsAsFactors = F))
h3k36me3 <- Colname(read.delim("HistoneMelH3k36me3MImmortal.bed", header = F, stringsAsFactors = F))
h3k79me2 <- Colname(read.delim("HistoneMelH3k79me2MImmortal.bed", header = F, stringsAsFactors = F))
ctcf <- Colname(read.delim("TfbsMelCtcfMImmortal.bed", header = F, stringsAsFactors = F))
pol2 <- Colname(read.delim("TfbsMelPol2MImmortal.bed", header = F, stringsAsFactors = F))
marks.bi <- cbind(Binary(h3k4me1), Binary(h3k4me3), Binary(h3k9ac), # Binary(h3k9me3),
Binary(h3k27ac), Binary(h3k27me3), Binary(h3k36me3), Binary(h3k79me2), Binary(ctcf), Binary(pol2))
marks.si <- cbind(Signal(h3k4me1), Signal(h3k4me3), Signal(h3k9ac), # Signal(h3k9me3),
Signal(h3k27ac), Signal(h3k27me3), Signal(h3k36me3), Signal(h3k79me2), Signal(ctcf), Signal(pol2))
